<refentry id="ListOptions">
<?dbhtml filename="config_ref_ListOptions.html">
<refentryinfo>
  <keywordset>
    <keyword>
      mod_ls
    </keyword>
  </keywordset>
</refentryinfo>
<refmeta>
<refentrytitle>
<indexterm><primary>ListOptions</primary></indexterm>
ListOptions
</refentrytitle>
</refmeta>
<refnamediv>
<refname>ListOptions</refname>
<refpurpose>Configure options used when listing directories</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>ListOptions</command>
<arg choice="opt">
  <option>"options string"</option>
</arg>
<arg choice="opt">
  <option>["strict"]</option>
</arg>
</cmdsynopsis>

<variablelist><title></title>
<varlistentry><term><synopsis>Default</synopsis></term>
<listitem> <para>
None
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Context</synopsis></term>
<listitem> <para>
server config, &lt;VirtualHost&gt;, &lt;Anonymous&gt;, &lt;Global&gt;, &lt;Directory&gt;, .ftpaccess
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Module</synopsis></term>
<listitem> <para>
mod_ls
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Compatibility</synopsis></term>
<listitem> <para>
1.2.8rc1 and later
</para> </listitem>
</varlistentry>
</variablelist>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para>
Normally, FTP commands involving directory listings (NLST, LIST and STAT) 
use the arguments (options) passed by the client to determine what files are 
displayed and the format they are displayed in.  The ListOptions directive
can alter the behaviour of such listings by making it such that a certain
option (or options) is always in effect, or is always disabled.
</para>

<para>
In addition to the normal dash-prefixed options that the builtin ls takes,
the directive allows for plus-prefixed options.  The plus-prefixed options
allow for their dash-prefixed equivalents, potentially given by a user, to
be disabled, while still allowing other options to function normally.
</para>

<programlisting>
      -1 List one file per line

      -A List all files except "." and ".."
    
      -a List all files including those whose names start with "."
    
      -C List entries by columns
    
      -d List directory entries instead of directory contents
    
      -F Append file type indicator (one of "*", "/", "=", "@" or "|") to names
    
      -h Print file sizes in human-readable format (e.g. 1K, 234M, 2G)
    
      -L List files pointed to by symlinks
    
      -l Use a long listing format
    
      -n List numeric UIDs/GIDs instead of user/group names
    
      -R List subdirectories recursively
    
      -r Sort filenames in reverse order
    
      -S Sort by file size
    
      -t Sort by modification time 
</programlisting>

<para>
If the optional "strict" keyword is used, then the configured options will
override any options given by the user (i.e. the user's options will be
ignored). In addition to "strict" the following keywords are supported:
</para>

<programlisting>
      maxfiles Sets a maximum limit on the number of files listed in one directory listing

      maxdirs Sets a maximum limit on the number of directories listed in one directory listing

      maxdepth Sets a maximum recursion depth, if the -R option is allowed 
</programlisting>

</refsect1>
<refsect1>
<title>See also</title>
<para>
<!--
<link linkend=""></link>
-->
</para>
</refsect1>

<refsect1>
<title>Examples</title>
<para>
  # Force directory listings to always show dotfiles
  ListOptions "-a"
</para>

<para>
  # To prevent anyone from doing recursive listings, but still allowing
  # other user options, use +R to disable any -R option given by users
  ListOptions "+R"
</para>

<para>
  # To allow only the basic listing, no options, always
  ListOptions "" strict
</para>

<para>
	#limit maximum files given back to 2000 and recurse in to a max
	#depth of 3 directories
	ListOptions -a maxfiles 2000 maxdepth 3
</para>
</refsect1>

</refentry>
