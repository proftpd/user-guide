<refentry id="tcpBackLog">
<?dbhtml filename="config_ref_tcpBackLog.html">
<refmeta>
<refentrytitle>
<indexterm><primary>tcpBackLog</primary></indexterm>
tcpBackLog
</refentrytitle>
</refmeta>
<refnamediv>
<refname>tcpBackLog</refname>
<refpurpose>Control the tcp backlog in standalone mode</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>tcpBackLog</command>
<arg choice="opt">
  <option>tcpBackLog backlog-size</option>
</arg>
<!--
<arg choice="opt" rep="repeat">file</arg>
-->
</cmdsynopsis>

<variablelist><title></title>
<varlistentry><term><synopsis>Default</synopsis></term>
<listitem> <para>
tcpBackLog 5
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Context</synopsis></term>
<listitem> <para>
server config
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Module</synopsis></term>
<listitem> <para>
mod_core
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Compatibility</synopsis></term>
<listitem> <para>
0.99.0 and later
</para> </listitem>
</varlistentry>
</variablelist>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para>
The tcpBackLog directive controls the tcp &quot;backlog queue&quot; when 
listening for connections in standalone mode (see 
ServerType). It has no affect upon 
servers in inetd mode. When a tcp connection is 
established by the tcp/ip stack inside the kernel, there is a short period 
of time between the actual establishment of the connection and the acceptance 
of the connection by a user-space program. The duration of this latency period 
is widely variable, and can depend upon several factors (hardware, system 
load, etc). During this period tcp connections cannot be accepted, as the 
port that was previously &quot;listening&quot; has become filled with the 
new connection. Under heavy connection load this can result in occasional 
(or even frequent!) &quot;connection refused&quot; messages returned to the 
incoming client, even when there is a service available to handle requests. 
To eliminate this problem, most modern tcp/ip stacks implement a &quot;backlog 
queue&quot; which is simply a pre-allocation of resources necessary to handle 
backlog-size connections during the latency period. 
The larger the backlog queue, the more connections can be established in a 
very short time period. The trade-off, of course, is kernel memory and/or 
other kernel resources.
Generally it is not necessary to use a tcpBackLog directive, unless you intend 
to service a large number of virtual hosts (see &lt;VirtualHost&gt;), 
or have a consistently heavy system load. If you begin to notice or hear of 
&quot;connection refused&quot; messages from remote clients, try setting a 
slightly higher value to this directive.</para>
</refsect1>

<refsect1>
<title>See also</title>
<para>
<!--
<link linkend=""></link>
-->
</para>
</refsect1>

<refsect1>
<title>Examples</title>
<para>
<!--
For examples, see 
<link linkend="Class">Class</link>
-->
</para>
</refsect1>

</refentry>
