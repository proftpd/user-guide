<refentry id="SQLAuthenticate">
<?dbhtml filename="config_ref_SQLAuthenticate.html">
<refentryinfo>
  <keywordset>
    <keyword>
      mod_sql
    </keyword>
  </keywordset>
</refentryinfo>

<refmeta>
  <refentrytitle>
    <indexterm><primary>SQLAuthenticate</primary></indexterm>
    SQLAuthenticate
  </refentrytitle>
</refmeta>

<refnamediv>
  <refname>SQLAuthenticate</refname>
  <refpurpose>
    Specify authentication methods and what to authenticate 
  </refpurpose>
</refnamediv>

<refsynopsisdiv>
  <cmdsynopsis>
    <command>SQLAuthenticate</command>
    <group choice="req">
      <arg>on</arg>
      <arg>off</arg>
    </group>
  </cmdsynopsis>

  <para>&nbsp;&nbsp;or</para>

  <cmdsynopsis>
    <command>SQLAuthenticate</command>
    <arg>
      users
    </arg>
    <arg>
      groups
    </arg>
    <arg>
      userset<arg>fast</arg>
    </arg>
    <arg>
      groupset<arg>fast</arg>
    </arg>
  </cmdsynopsis>
 
  <variablelist><title></title>
    <varlistentry><term><synopsis>Default</synopsis></term>
      <listitem>
        <para>
          SQLAuthenticate <computeroutput>on</computeroutput> 
        </para> 
      </listitem>
    </varlistentry>

    <varlistentry><term><synopsis>Context</synopsis></term>
      <listitem> 
        <para>
          server config, &lt;Global&gt;, &lt;VirtualHost&gt;
        </para> 
      </listitem>
    </varlistentry>

    <varlistentry><term><synopsis>Module</synopsis></term>
      <listitem> 
        <para>
          mod_sql
        </para> 
      </listitem>
    </varlistentry>

    <varlistentry><term><synopsis>Compatibility</synopsis></term>
      <listitem> 
        <para>
          1.2.5rc1 and later
        </para> 
      </listitem>
    </varlistentry>
  </variablelist>
</refsynopsisdiv>

<refsect1>
  <title>Description</title>
<para>
The SQLAuthenticate directive configures mod_sql's authentication behavior,
controlling whether to provide user and/or group information during
authentication, and how that provisioning is performed. The parameters may
appear in any order.
</para>

<para>
The available parameter values are:
</para>
<itemizedlist mark='bullet'>
	      <listitem>
	      <para><emphasis role="bold">on</emphasis></para>
	      <para>
		Shorthand for SQLAuthenticate users groups userset groupset.
	      </para>
	      </listitem>
	      
	      <listitem>
	      <para><emphasis role="bold">off</emphasis></para>
	      <para>
		Disables all mod_sql authentication functions.
	      </para>
	      </listitem>

	      <listitem>
	      <para><emphasis role="bold">users</emphasis></para>
	      <para>
		If present, mod_sql will do user lookups. If not present,
		mod_sql will do no user lookups at all, including the
		{set|get|end}pwent() calls (see below).
	      </para>
	      </listitem>

	      <listitem>
	      <para><emphasis role="bold">groups</emphasis></para>
	      <para>
		If present, mod_sql will do group lookups. If not present,
		mod_sql will do no group lookups at all, including the
		{set|get|end}grent() calls (see below).
	      </para>
	      </listitem>

	      <listitem>
	      <para><emphasis role="bold">userset[fast]</emphasis></para>
	      <para>
		If present, mod_sql will process the potentially expensive
		{set|get|end}pwent() calls. If not present, mod_sql will
		not process these calls. Adding the suffix "fast" tells
		mod_sql to process the users as a single large query, rather
		than making a query per user. This may significantly reduce
		the number of queries against the database at the expense
		of increased memory use. This parameter will have no effect
		if "users" is not specified.
	      </para>
	      </listitem>

	      <listitem>
	      <para><emphasis role="bold">groupset[fast]</emphasis></para>
	      <para>
		If present, mod_sql will process the potentially expensive
		{set|get|end}grent() calls. If not present, mod_sql will
		not process these calls. Adding the suffix "fast" tells
		mod_sql to process the groups as a single large query, 
		rather than making a query per group. This may significantly
		reduce the number of queries against the database at the
		expense of increased memory use. This parameter will have no
		effect if "groups" is not specified.
	      </para>
	      </listitem>
</itemizedlist>

<para>
The SQLLog and SQLShowInfo directives will always be processed by mod_sql.
The SQLAuthenticate directive only affects the user and group
lookup/authentication portions of the module.
</para>

<para>
Turning off (i.e. by not including) the userset or groupset parameters
affects the functionality of mod_sql. Not allowing these lookups may remove
the ability to control access or control functionality by group membership,
depending on your other authentication handlers and the data available to
them. At the same time, choosing not to do these lookups may dramatically
speed login for many large sites.
</para>

<para>
The "fast" suffix is not appropriate for every site. Normally, mod_sql will
retrieve a list of users and groups, and get information from the database
on a per-user or per-group basis. This is query intensive: it requires
(nn + 1) queries, where n is the number of users or groups to lookup. By 
choosing "fast" lookups, mod_sql will make a single SELECT query to get
information from the database.
</para>

<para>
In exchange for the radical reduction in the number of queries, the single
query will increase the memory consumption of the process; all group or user
information will be read at once rather than in discrete chunks.
</para>
</refsect1>

<refsect2>
<title>Group Table Structure</title>
<para>
Normally <emphasis role="bold">mod_sql</emphasis> allows multiple group
members per row, and multiple rows per group. If you use the "fast"
option for groupset, you <emphasis role="bold">must</emphasis> use only one
row per group. For example, normally mod_sql treats the following three
tables in exactly the same way:
</para>
<literallayout>
|--------------------------------------------------|
|  GROUPNAME  |  GID  |  MEMBERS                   |
|--------------------------------------------------|
| group1      | 1000  | naomi                      |
| group1      | 1000  | priscilla                  |
| group1      | 1000  | gertrude                   |
|--------------------------------------------------|

|--------------------------------------------------|
|  GROUPNAME  |  GID  |  MEMBERS                   |
|--------------------------------------------------|
| group1      | 1000  | naomi, priscilla           |
| group1      | 1000  | gertrude                   |
|--------------------------------------------------|

|--------------------------------------------------|
|  GROUPNAME  |  GID  |  MEMBERS                   |
|--------------------------------------------------|
| group1      | 1000  | naomi, priscilla, gertrude |
|--------------------------------------------------|
</literallayout>

<para>
If you use the "fast" option, mod_sql assumes that all entries are 
structured like the last example.
</para>
</refsect2>

<refsect1>
  <title>See also</title>
    <para>
      <link linkend="SQLUserInfo">SQLUserInfo</link> 
      <link linkend="SQLGroupInfo">SQLGroupInfo</link>
    </para>
</refsect1>

<refsect1>
  <title>Examples</title>
</refsect1>
</refentry>

