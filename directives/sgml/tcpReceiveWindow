<refentry id="tcpReceiveWindow">
<?dbhtml filename="config_ref_tcpReceiveWindow.html">
<refmeta>
<refentrytitle>
<indexterm><primary>tcpReceiveWindow</primary></indexterm>
tcpReceiveWindow
</refentrytitle>
</refmeta>
<refnamediv>
<refname>tcpReceiveWindow</refname>
<refpurpose>FIXME FIXME</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>tcpReceiveWindow</command>
<arg choice="opt">
  <option>tcpReceiveWindow window-size</option>
</arg>
<!--
<arg choice="opt" rep="repeat">file</arg>
-->
</cmdsynopsis>

<variablelist><title></title>
<varlistentry><term><synopsis>Default</synopsis></term>
<listitem> <para>
tcpReceiveWindow 8192
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Context</synopsis></term>
<listitem> <para>
server config, &lt;VirtualHost&gt;
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Module</synopsis></term>
<listitem> <para>
mod_core
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Compatibility</synopsis></term>
<listitem> <para>
0.99.0 and later
</para> </listitem>
</varlistentry>
</variablelist>

<refsect1>
<title>Description</title>
<para>
The tcpReceiveWindow directive configures the size (in octets) of all data 
connections' tcp receive windows. It is only used when receiving a file from 
a client over the data connection. Typically, a given tcp/ip implementation 
will use a relatively small receive window size (the number of octets that 
can be received at the tcp layer before a &quot;turnaround&quot; acknowledgement 
is required). When transferring a large amount of data over fast digital transmission 
lines which have a relatively high latency, a small receive window can dramatically 
affect perceived throughput because of the necessity to completely stop the 
transfer occasionally in order to wait for the remote endpoint to receive 
the acknowledgement and continue transmission. For example, on a T1 line (assuming 
full 1.544Mbps endpoint-to-endpoint throughput) with 100 ms latency, a 4k 
receive buffer will very dramatically reduce the perceived throughput. The 
default value of 8192 octets (8k) should be reasonable in common network configurations.
Additionally, proftpd allocates its internal buffers to match the receive/send 
window sizes; in order to maximize the reception/transmission performance 
(reducing the number of times data must be transfered from proftpd to the 
kernel tcp/ip stack). The tradeoff, of course, is memory; both kernel- and 
user-space. If running proftpd on a memory tight host (and on a low-bandwidth 
connection), it might be advisable to decrease both the tcpReceiveWindow and 
tcpSendWindow sizes.
</refsect1>

<refsect1>
<title>See also</title>
<para>
<!--
<link linkend=""></link>
-->
</para>
</refsect1>

<refsect1>
<title>Examples</title>
<para>
<!--
For examples, see 
<link linkend="Class">Class</link>
-->
</para>
</refsect1>

</refentry>
