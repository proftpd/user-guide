<refentry id="SQLAuthTypes">
<?dbhtml filename="config_ref_SQLAuthTypes.html">
<refentryinfo>
  <keywordset>
    <keyword>
      mod_sql
    </keyword>
  </keywordset>
</refentryinfo>
<refmeta>
<refentrytitle>
<indexterm><primary>SQLAuthTypes</primary></indexterm>
SQLAuthTypes
</refentrytitle>
</refmeta>
<refnamediv>
<refname>SQLAuthTypes</refname>
<refpurpose>Specify the allowed authentication types and their check order</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>SQLAuthTypes</command>
<arg choice="opt">
  <option>[OpenSSL]</option>
</arg>
<arg choice="opt">
  <option>[Crypt]</option>
</arg>
<arg choice="opt">
  <option>[Backend]</option>
</arg>
<arg choice="opt">
  <option>[Plaintext]</option>
</arg>
<arg choice="opt">
  <option>[Empty]</option>
</arg>
<!--
<arg choice="opt" rep="repeat">file</arg>
-->
</cmdsynopsis>

<variablelist><title></title>
<varlistentry><term><synopsis>Default</synopsis></term>
<listitem> <para>
none
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Context</synopsis></term>
<listitem> <para>
server config, &lt;Global&gt;, &lt;VirtualHost&gt;
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Module</synopsis></term>
<listitem> <para>
mod_sql
</para> </listitem>
</varlistentry>

<varlistentry><term><synopsis>Compatibility</synopsis></term>
<listitem> <para>
1.2.0 and later
</para> </listitem>
</varlistentry>
</variablelist>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para>
This directive deprecates 'SQLEmptyPasswords',
'SQLScrambledPasswords', 'SQLSSLHashedPasswords',
'SQLPlaintextPasswords', and 'SQLEncryptedPasswords'.
</para>

<para>
The SQLAuthTypes directive specifies which authentication method
are to be allowed, and their order of use.
<emphasis role="bold">You must specify at least one authentication
method.</emphasis>
</para>

<para>
The current supported authentication methods are:
</para>

<itemizedlist mark='opencircle'>
              <listitem override='bullet'>
              <para><emphasis role="bold">Backend</emphasis></para>
              <para>
		Allows database-specific backend passwords. Not all
		backend databases support this option. For example,
		MySQL datatabases use this option to authenticate MySQL
		'PASSWORD()' encrypted passwords. The Postgres backend,
		however, does nothing.<emphasis role="bold">Caveat
		</emphasis>: if your MySQL activity log is world-readable,
		the user password <emphasis role="bold">will be visible
		</emphasis>. You have been warned.
              </para>

              <listitem override='bullet'>
              <para><emphasis role="bold">Crypt</emphasis></para>
              <para>
		Allows passwords in the database to be of Unix crypt(3) form.
              </para>

              <listitem override='bullet'>
              <para><emphasis role="bold">Empty</emphasis></para>
              <para>
		Allows empty passwords in the database, which match
		against <emphasis role="bold">any</emphasis> password
		the user may give. The database field must be a truly
		empty string; NULL values are not acceptable as empty
		passwords. <emphasis role="bold">Be very careful if using
		this authentication method.</emphasis>
              </para>

              <listitem override='bullet'>
              <para><emphasis role="bold">OpenSSL</emphasis></para>
              <para>
		Allows passwords in the database to be of the form
		'{digest-name}hashed-value', where hashed-value
		is the base64-encoded digest of the passsword.
		Only available if you define HAVE_OPENSSL when you
		compile proftpd  and you link with OpenSSL's libcrypto
		library.
              </para>

              <listitem override='bullet'>
              <para><emphasis role="bold">Plaintext</emphasis></para>
              <para>
		Allows passwords in the database to be in plaintext.
              </para>
</itemizedlist>
</refsect1>
<refsect1>
<title>See also</title>
<para>
<!--
<link linkend=""></link>
-->
</para>
</refsect1>

<refsect1>
<title>Examples</title>

<literallayout>
	SQLAuthTypes Crypt Empty
</literallayout>
<para>
configures mod_sql to first attempt to verify the password using the
Unix crypt(3) function, then, if that fails, determine if the password
in the database is empty (thus matching any given password). If all of
the configured authentication methods fail, mod_sql will fail to
authenticate the user.
</para>

</refsect1>


</refentry>

